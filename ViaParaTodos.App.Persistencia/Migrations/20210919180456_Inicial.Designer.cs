// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViaParaTodos.App.Persistencia.AppRepositorios;

namespace ViaParaTodos.App.Persistencia.Migrations
{
    [DbContext(typeof(AppRepositorios.AppContext))]
    [Migration("20210919180456_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Accidente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("agenteTransitoid")
                        .HasColumnType("int");

                    b.Property<int?>("conductoresid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("localizacionid")
                        .HasColumnType("int");

                    b.Property<int?>("propietariosid")
                        .HasColumnType("int");

                    b.Property<int?>("vehiculosid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("agenteTransitoid");

                    b.HasIndex("conductoresid");

                    b.HasIndex("localizacionid");

                    b.HasIndex("propietariosid");

                    b.HasIndex("vehiculosid");

                    b.ToTable("accidente");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Documentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("planilla")
                        .HasColumnType("bit");

                    b.Property<bool>("soat")
                        .HasColumnType("bit");

                    b.Property<bool>("tMecanica")
                        .HasColumnType("bit");

                    b.Property<bool>("tOficial")
                        .HasColumnType("bit");

                    b.Property<bool>("tPropiedad")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("documentos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Localizacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("latitud")
                        .HasColumnType("real");

                    b.Property<float>("longitus")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("localizacion");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Personas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personas");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Vehiculos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("claseServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("documentosid")
                        .HasColumnType("int");

                    b.Property<string>("linea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("modelo")
                        .HasColumnType("int");

                    b.Property<string>("placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("documentosid");

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("contrasena")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Administrador_contrasena");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Administrador_usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.AgenteTransito", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rango")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AgenteTransito");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Conductores", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vigenciaLicencia")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Conductores");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Propietarios", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.HasDiscriminator().HasValue("Propietarios");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Accidente", b =>
                {
                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.AgenteTransito", "agenteTransito")
                        .WithMany()
                        .HasForeignKey("agenteTransitoid");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Conductores", "conductores")
                        .WithMany()
                        .HasForeignKey("conductoresid");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Localizacion", "localizacion")
                        .WithMany()
                        .HasForeignKey("localizacionid");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Propietarios", "propietarios")
                        .WithMany()
                        .HasForeignKey("propietariosid");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Vehiculos", "vehiculos")
                        .WithMany()
                        .HasForeignKey("vehiculosid");

                    b.Navigation("agenteTransito");

                    b.Navigation("conductores");

                    b.Navigation("localizacion");

                    b.Navigation("propietarios");

                    b.Navigation("vehiculos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Vehiculos", b =>
                {
                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Documentos", "documentos")
                        .WithMany()
                        .HasForeignKey("documentosid");

                    b.Navigation("documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
