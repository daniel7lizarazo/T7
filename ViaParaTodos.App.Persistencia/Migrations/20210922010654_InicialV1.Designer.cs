// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViaParaTodos.App.Persistencia.AppRepositorios;

namespace ViaParaTodos.App.Persistencia.Migrations
{
    [DbContext(typeof(Persistencia.AppRepositorios.AppContext))]
    [Migration("20210922010654_InicialV1")]
    partial class InicialV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Accidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AgenteTransitoId")
                        .HasColumnType("int");

                    b.Property<int?>("ConductoresId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalizacionId")
                        .HasColumnType("int");

                    b.Property<int?>("PropietariosId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteTransitoId");

                    b.HasIndex("ConductoresId");

                    b.HasIndex("LocalizacionId");

                    b.HasIndex("PropietariosId");

                    b.HasIndex("VehiculosId");

                    b.ToTable("Accidente");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Planilla")
                        .HasColumnType("bit");

                    b.Property<bool>("SOAT")
                        .HasColumnType("bit");

                    b.Property<bool>("TarjetaMecanica")
                        .HasColumnType("bit");

                    b.Property<bool>("TarjetaOficial")
                        .HasColumnType("bit");

                    b.Property<bool>("TarjetaPropiedad")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Localizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Latitud")
                        .HasColumnType("real");

                    b.Property<float>("Longitus")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Localizacion");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Personas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personas");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Vehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaseServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConductoresId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentosId")
                        .HasColumnType("int");

                    b.Property<string>("Linea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Modelo")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropietariosId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConductoresId");

                    b.HasIndex("DocumentosId");

                    b.HasIndex("PropietariosId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Administrador_Contrasena");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Administrador_Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.AgenteTransito", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rango")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AgenteTransito");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Conductores", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VigenciaLicencia")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Conductores");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Propietarios", b =>
                {
                    b.HasBaseType("ViaParaTodos.App.Dominio.Entidades.Personas");

                    b.HasDiscriminator().HasValue("Propietarios");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Accidente", b =>
                {
                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.AgenteTransito", "AgenteTransito")
                        .WithMany()
                        .HasForeignKey("AgenteTransitoId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Conductores", "Conductores")
                        .WithMany()
                        .HasForeignKey("ConductoresId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Localizacion", "Localizacion")
                        .WithMany()
                        .HasForeignKey("LocalizacionId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Propietarios", "Propietarios")
                        .WithMany()
                        .HasForeignKey("PropietariosId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Vehiculos", "Vehiculos")
                        .WithMany()
                        .HasForeignKey("VehiculosId");

                    b.Navigation("AgenteTransito");

                    b.Navigation("Conductores");

                    b.Navigation("Localizacion");

                    b.Navigation("Propietarios");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("ViaParaTodos.App.Dominio.Entidades.Vehiculos", b =>
                {
                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Conductores", "Conductores")
                        .WithMany()
                        .HasForeignKey("ConductoresId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Documentos", "Documentos")
                        .WithMany()
                        .HasForeignKey("DocumentosId");

                    b.HasOne("ViaParaTodos.App.Dominio.Entidades.Propietarios", "Propietarios")
                        .WithMany()
                        .HasForeignKey("PropietariosId");

                    b.Navigation("Conductores");

                    b.Navigation("Documentos");

                    b.Navigation("Propietarios");
                });
#pragma warning restore 612, 618
        }
    }
}
